// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: ProtoCommon.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoError int32

const (
	ProtoError_SUCCESS                                                 ProtoError = 0
	ProtoError_FAILED                                                  ProtoError = 1
	ProtoError_INVALID_LOGIN_TOKEN                                     ProtoError = 2
	ProtoError_INVALID_GAME_TICKET                                     ProtoError = 3
	ProtoError_SERVER_BUSY                                             ProtoError = 4
	ProtoError_ROLE_NOT_EXIST                                          ProtoError = 5
	ProtoError_ROLE_CREATE_FAIL                                        ProtoError = 6
	ProtoError_OTHER_DEVICE_LOGIN                                      ProtoError = 7
	ProtoError_ROLE_ALREADY_INIT                                       ProtoError = 8
	ProtoError_CONFIG_ERROR                                            ProtoError = 9
	ProtoError_INVALID_PARAM                                           ProtoError = 10
	ProtoError_NAME_LENGTH_INVALID                                     ProtoError = 11
	ProtoError_NOTICE_LENGTH_INVALID                                   ProtoError = 12
	ProtoError_HERO_CRAETE_FAIL                                        ProtoError = 1001
	ProtoError_HERO_EXIST                                              ProtoError = 1002
	ProtoError_HERO_NOT_EXIST                                          ProtoError = 1003
	ProtoError_HERO_FULL_LEVEL                                         ProtoError = 1004
	ProtoError_HERO_FULL_STAGE                                         ProtoError = 1005
	ProtoError_HERO_FULL_STAR                                          ProtoError = 1006
	ProtoError_BUILDING_CREATE_FAIL                                    ProtoError = 2001
	ProtoError_BUILDING_LV_UP_FAIL                                     ProtoError = 2002
	ProtoError_BUILDING_LV_UP_FAIL_MAX_LV                              ProtoError = 2003
	ProtoError_BUILDING_LV_UP_FAIL_RESOURCE_NOT_ENOUGH                 ProtoError = 2004
	ProtoError_BUILDING_LV_UP_FAIL_STATE_ERROR                         ProtoError = 2005
	ProtoError_BUILDING_LV_UP_FAIL_TASK_FULL                           ProtoError = 2006
	ProtoError_BUILDING_LV_UP_FAIL_CANNOT_LV_UP_WHEN_WORKING           ProtoError = 2007
	ProtoError_BUILDING_LV_UP_FAIL_CONFIG_ERROR                        ProtoError = 2008
	ProtoError_BUILDING_LV_UP_FAIL_POS_IS_OCCUPIED                     ProtoError = 2009
	ProtoError_BUILDING_NOT_EXIST                                      ProtoError = 2010
	ProtoError_BUILDING_WORK_FAIL_CONFIG_ERROR                         ProtoError = 2011
	ProtoError_BUILDING_LV_UP_FAIL_BUILDING_IS_UPGRADING               ProtoError = 2012
	ProtoError_BUILDING_LV_UP_FAIL_NOT_FINISH_YET                      ProtoError = 2013
	ProtoError_BUILDING_FINISH_WORK_FAIL_NOT_FINISH_YET                ProtoError = 2014
	ProtoError_BUILDING_FINISH_WORK_FAIL_STATE_ERROR                   ProtoError = 2015
	ProtoError_BUILDING_FINISH_WORK_FAIL_BUILDING_IS_WORKING           ProtoError = 2016
	ProtoError_BUILDING_CREATE_FAIL_MAX_COUNT                          ProtoError = 2017
	ProtoError_MAKE_SOLDIER_FAIL_NO_SOLDIER_BUILDINGS                  ProtoError = 2018
	ProtoError_MAKE_SOLDIER_FAIL_BUILDING_CANNOT_MAKE_SPECIFIC_SOLDIER ProtoError = 2019
	ProtoError_MAKE_SOLDIER_FAIL_CANNOT_MAKE_AMMOUNT_OF_SOLDIERS       ProtoError = 2020
	ProtoError_SKILL_SLOT_INVALID                                      ProtoError = 3001
	ProtoError_SKILL_FULL_LEVEL                                        ProtoError = 3002
	ProtoError_MAGIC_WEAPON_CRAETE_FAIL                                ProtoError = 4001
	ProtoError_MAGIC_WEAPON_EXIST                                      ProtoError = 4002
	ProtoError_MAGIC_WEAPON_NOT_EXIST                                  ProtoError = 4003
	ProtoError_MAGIC_WEAPON_FULL_LEVEL                                 ProtoError = 4004
	ProtoError_MAGIC_WEAPON_FULL_STAR                                  ProtoError = 4005
	//items
	ProtoError_ITEMS_NOT_EXIST ProtoError = 5000
	//world
	ProtoError_ARMY_NOT_EXIST ProtoError = 6000
	ProtoError_ARMY_IS_LOSE   ProtoError = 6001
	ProtoError_UNIT_NOT_EXIST ProtoError = 6002
	// union
	ProtoError_UNION_CREATE_FAIL        ProtoError = 7001
	ProtoError_UNION_DO_NOT_JOIN        ProtoError = 7002
	ProtoError_UNION_JOINED             ProtoError = 7003
	ProtoError_UNION_NOT_FOUND          ProtoError = 7004
	ProtoError_UNION_LEADER_CANNOT_QUIT ProtoError = 7005
	ProtoError_UNION_LEADER_NOT_EXIST   ProtoError = 7006
	//email
	ProtoError_EMAIL_NOT_EXIST    ProtoError = 8000
	ProtoError_EMAIL_HAVA_CLAIMED ProtoError = 8001
)

// Enum value maps for ProtoError.
var (
	ProtoError_name = map[int32]string{
		0:    "SUCCESS",
		1:    "FAILED",
		2:    "INVALID_LOGIN_TOKEN",
		3:    "INVALID_GAME_TICKET",
		4:    "SERVER_BUSY",
		5:    "ROLE_NOT_EXIST",
		6:    "ROLE_CREATE_FAIL",
		7:    "OTHER_DEVICE_LOGIN",
		8:    "ROLE_ALREADY_INIT",
		9:    "CONFIG_ERROR",
		10:   "INVALID_PARAM",
		11:   "NAME_LENGTH_INVALID",
		12:   "NOTICE_LENGTH_INVALID",
		1001: "HERO_CRAETE_FAIL",
		1002: "HERO_EXIST",
		1003: "HERO_NOT_EXIST",
		1004: "HERO_FULL_LEVEL",
		1005: "HERO_FULL_STAGE",
		1006: "HERO_FULL_STAR",
		2001: "BUILDING_CREATE_FAIL",
		2002: "BUILDING_LV_UP_FAIL",
		2003: "BUILDING_LV_UP_FAIL_MAX_LV",
		2004: "BUILDING_LV_UP_FAIL_RESOURCE_NOT_ENOUGH",
		2005: "BUILDING_LV_UP_FAIL_STATE_ERROR",
		2006: "BUILDING_LV_UP_FAIL_TASK_FULL",
		2007: "BUILDING_LV_UP_FAIL_CANNOT_LV_UP_WHEN_WORKING",
		2008: "BUILDING_LV_UP_FAIL_CONFIG_ERROR",
		2009: "BUILDING_LV_UP_FAIL_POS_IS_OCCUPIED",
		2010: "BUILDING_NOT_EXIST",
		2011: "BUILDING_WORK_FAIL_CONFIG_ERROR",
		2012: "BUILDING_LV_UP_FAIL_BUILDING_IS_UPGRADING",
		2013: "BUILDING_LV_UP_FAIL_NOT_FINISH_YET",
		2014: "BUILDING_FINISH_WORK_FAIL_NOT_FINISH_YET",
		2015: "BUILDING_FINISH_WORK_FAIL_STATE_ERROR",
		2016: "BUILDING_FINISH_WORK_FAIL_BUILDING_IS_WORKING",
		2017: "BUILDING_CREATE_FAIL_MAX_COUNT",
		2018: "MAKE_SOLDIER_FAIL_NO_SOLDIER_BUILDINGS",
		2019: "MAKE_SOLDIER_FAIL_BUILDING_CANNOT_MAKE_SPECIFIC_SOLDIER",
		2020: "MAKE_SOLDIER_FAIL_CANNOT_MAKE_AMMOUNT_OF_SOLDIERS",
		3001: "SKILL_SLOT_INVALID",
		3002: "SKILL_FULL_LEVEL",
		4001: "MAGIC_WEAPON_CRAETE_FAIL",
		4002: "MAGIC_WEAPON_EXIST",
		4003: "MAGIC_WEAPON_NOT_EXIST",
		4004: "MAGIC_WEAPON_FULL_LEVEL",
		4005: "MAGIC_WEAPON_FULL_STAR",
		5000: "ITEMS_NOT_EXIST",
		6000: "ARMY_NOT_EXIST",
		6001: "ARMY_IS_LOSE",
		6002: "UNIT_NOT_EXIST",
		7001: "UNION_CREATE_FAIL",
		7002: "UNION_DO_NOT_JOIN",
		7003: "UNION_JOINED",
		7004: "UNION_NOT_FOUND",
		7005: "UNION_LEADER_CANNOT_QUIT",
		7006: "UNION_LEADER_NOT_EXIST",
		8000: "EMAIL_NOT_EXIST",
		8001: "EMAIL_HAVA_CLAIMED",
	}
	ProtoError_value = map[string]int32{
		"SUCCESS":                                 0,
		"FAILED":                                  1,
		"INVALID_LOGIN_TOKEN":                     2,
		"INVALID_GAME_TICKET":                     3,
		"SERVER_BUSY":                             4,
		"ROLE_NOT_EXIST":                          5,
		"ROLE_CREATE_FAIL":                        6,
		"OTHER_DEVICE_LOGIN":                      7,
		"ROLE_ALREADY_INIT":                       8,
		"CONFIG_ERROR":                            9,
		"INVALID_PARAM":                           10,
		"NAME_LENGTH_INVALID":                     11,
		"NOTICE_LENGTH_INVALID":                   12,
		"HERO_CRAETE_FAIL":                        1001,
		"HERO_EXIST":                              1002,
		"HERO_NOT_EXIST":                          1003,
		"HERO_FULL_LEVEL":                         1004,
		"HERO_FULL_STAGE":                         1005,
		"HERO_FULL_STAR":                          1006,
		"BUILDING_CREATE_FAIL":                    2001,
		"BUILDING_LV_UP_FAIL":                     2002,
		"BUILDING_LV_UP_FAIL_MAX_LV":              2003,
		"BUILDING_LV_UP_FAIL_RESOURCE_NOT_ENOUGH": 2004,
		"BUILDING_LV_UP_FAIL_STATE_ERROR":         2005,
		"BUILDING_LV_UP_FAIL_TASK_FULL":           2006,
		"BUILDING_LV_UP_FAIL_CANNOT_LV_UP_WHEN_WORKING":           2007,
		"BUILDING_LV_UP_FAIL_CONFIG_ERROR":                        2008,
		"BUILDING_LV_UP_FAIL_POS_IS_OCCUPIED":                     2009,
		"BUILDING_NOT_EXIST":                                      2010,
		"BUILDING_WORK_FAIL_CONFIG_ERROR":                         2011,
		"BUILDING_LV_UP_FAIL_BUILDING_IS_UPGRADING":               2012,
		"BUILDING_LV_UP_FAIL_NOT_FINISH_YET":                      2013,
		"BUILDING_FINISH_WORK_FAIL_NOT_FINISH_YET":                2014,
		"BUILDING_FINISH_WORK_FAIL_STATE_ERROR":                   2015,
		"BUILDING_FINISH_WORK_FAIL_BUILDING_IS_WORKING":           2016,
		"BUILDING_CREATE_FAIL_MAX_COUNT":                          2017,
		"MAKE_SOLDIER_FAIL_NO_SOLDIER_BUILDINGS":                  2018,
		"MAKE_SOLDIER_FAIL_BUILDING_CANNOT_MAKE_SPECIFIC_SOLDIER": 2019,
		"MAKE_SOLDIER_FAIL_CANNOT_MAKE_AMMOUNT_OF_SOLDIERS":       2020,
		"SKILL_SLOT_INVALID":                                      3001,
		"SKILL_FULL_LEVEL":                                        3002,
		"MAGIC_WEAPON_CRAETE_FAIL":                                4001,
		"MAGIC_WEAPON_EXIST":                                      4002,
		"MAGIC_WEAPON_NOT_EXIST":                                  4003,
		"MAGIC_WEAPON_FULL_LEVEL":                                 4004,
		"MAGIC_WEAPON_FULL_STAR":                                  4005,
		"ITEMS_NOT_EXIST":                                         5000,
		"ARMY_NOT_EXIST":                                          6000,
		"ARMY_IS_LOSE":                                            6001,
		"UNIT_NOT_EXIST":                                          6002,
		"UNION_CREATE_FAIL":                                       7001,
		"UNION_DO_NOT_JOIN":                                       7002,
		"UNION_JOINED":                                            7003,
		"UNION_NOT_FOUND":                                         7004,
		"UNION_LEADER_CANNOT_QUIT":                                7005,
		"UNION_LEADER_NOT_EXIST":                                  7006,
		"EMAIL_NOT_EXIST":                                         8000,
		"EMAIL_HAVA_CLAIMED":                                      8001,
	}
)

func (x ProtoError) Enum() *ProtoError {
	p := new(ProtoError)
	*p = x
	return p
}

func (x ProtoError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtoError) Descriptor() protoreflect.EnumDescriptor {
	return file_ProtoCommon_proto_enumTypes[0].Descriptor()
}

func (ProtoError) Type() protoreflect.EnumType {
	return &file_ProtoCommon_proto_enumTypes[0]
}

func (x ProtoError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtoError.Descriptor instead.
func (ProtoError) EnumDescriptor() ([]byte, []int) {
	return file_ProtoCommon_proto_rawDescGZIP(), []int{0}
}

type ProtoCode int32

const (
	ProtoCode_INVALID                           ProtoCode = 0
	ProtoCode_ERROR_MESSAGE                     ProtoCode = 1
	ProtoCode_HEART_BEAT_REQUEST                ProtoCode = 2
	ProtoCode_HEART_BEAT_RESPONSE               ProtoCode = 3
	ProtoCode_LOGIN_REQUEST                     ProtoCode = 10
	ProtoCode_LOGIN_RESPONSE                    ProtoCode = 11
	ProtoCode_LOGOUT_REQUEST                    ProtoCode = 12
	ProtoCode_LOGOUT_RESPONSE                   ProtoCode = 13
	ProtoCode_KICK_OUT_REQUEST                  ProtoCode = 14
	ProtoCode_KICK_OUT_RESPONSE                 ProtoCode = 15
	ProtoCode_LOGIN_INIT_REQUEST                ProtoCode = 20
	ProtoCode_INIT_ROLE_RESPONSE                ProtoCode = 21
	ProtoCode_INIT_BUILDINGS_RESPONSE           ProtoCode = 22
	ProtoCode_INIT_HEROS_RESPONSE               ProtoCode = 23
	ProtoCode_INIT_WORLD_POSITION_RESPONSE      ProtoCode = 24
	ProtoCode_LOGIN_INIT_FINISH_RESPONSE        ProtoCode = 60
	ProtoCode_ROLE_INIT_CREATE_REQUEST          ProtoCode = 61
	ProtoCode_ADD_BUILDING_RESPONSE             ProtoCode = 62
	ProtoCode_ADD_HERO_RESPONSE                 ProtoCode = 63
	ProtoCode_ROLE_INIT_CREATE_RESPONSE         ProtoCode = 80
	ProtoCode_BUILDING_CREATE_REQUEST           ProtoCode = 81
	ProtoCode_BUILDING_CREATE_RESPONSE          ProtoCode = 82
	ProtoCode_BUILDING_LEVEL_UP_REQUEST         ProtoCode = 83
	ProtoCode_BUILDING_LEVEL_UP_RESPONSE        ProtoCode = 84
	ProtoCode_BUILDING_LEVEL_UP_FINISH_REQUEST  ProtoCode = 85
	ProtoCode_BUILDING_LEVEL_UP_FINISH_RESPONSE ProtoCode = 86
	ProtoCode_START_MAKE_SOLDIER_REQUEST        ProtoCode = 87
	ProtoCode_START_MAKE_SOLDIER_RESPONSE       ProtoCode = 88
	ProtoCode_COLLECT_RESOURCE_REQUEST          ProtoCode = 89
	ProtoCode_COLLECT_RESOURCE_RESPONSE         ProtoCode = 90
	ProtoCode_COLLECT_SOLDIER_REQUEST           ProtoCode = 91
	ProtoCode_COLLECT_SOLDIER_RESPONSE          ProtoCode = 92
	ProtoCode_BUILDING_UPDATE_NOTIFY            ProtoCode = 93
	ProtoCode_INCITY_SOLDIER_UPDATE_NOTIFY      ProtoCode = 94
	ProtoCode_START_LV_UP_SOLDIER_REQUEST       ProtoCode = 95
	ProtoCode_START_LV_UP_SOLDIER_RESPONSE      ProtoCode = 96
	ProtoCode_HERO_CREATE_REQUEST               ProtoCode = 120
	ProtoCode_HERO_CREATE_RESPONSE              ProtoCode = 121
	ProtoCode_HERO_LEVEL_UP_REQUEST             ProtoCode = 122
	ProtoCode_HERO_LEVEL_UP_RESPONSE            ProtoCode = 123
	ProtoCode_HERO_STAGE_UP_REQUEST             ProtoCode = 124
	ProtoCode_HERO_STAGE_UP_RESPONSE            ProtoCode = 125
	ProtoCode_HERO_STAR_UP_REQUEST              ProtoCode = 126
	ProtoCode_HERO_STAR_UP_RESPONSE             ProtoCode = 127
	ProtoCode_HERO_SKILL_LEVEL_UP_REQUEST       ProtoCode = 128
	ProtoCode_HERO_SKILL_LEVEL_UP_RESPONSE      ProtoCode = 129
	ProtoCode_HERO_INFO_REQUEST                 ProtoCode = 130
	ProtoCode_HERO_INFO_RESPONSE                ProtoCode = 131
	ProtoCode_HERO_SINGLE_INFO_REQUEST          ProtoCode = 132
	ProtoCode_HERO_SINGLE_INFO_RESPONSE         ProtoCode = 133
	ProtoCode_ARMY_CREATE_REQUEST               ProtoCode = 200
	ProtoCode_ARMY_DELETE_NOTIFY                ProtoCode = 201
	ProtoCode_ARMY_CREATE_NOTIFY                ProtoCode = 202
	ProtoCode_ARMY_ACTION_REQUEST               ProtoCode = 203
	ProtoCode_ARMY_ACTION_RESPONSE              ProtoCode = 204
	ProtoCode_ARMY_ACTION_NOTIFY                ProtoCode = 205
	ProtoCode_BATTLE_UNIT_STATUS_CHANGE_NOTIFY  ProtoCode = 206
	ProtoCode_MONSTER_CREATE_NOTIFY             ProtoCode = 208
	ProtoCode_MONSTER_DELETE_NOTIFY             ProtoCode = 209
	ProtoCode_RESOURCE_FIELD_CREATE_NOTIFY      ProtoCode = 210
	ProtoCode_RESOURCE_FIELD_DELETE_NOTIFY      ProtoCode = 211
	ProtoCode_ARMY_PANEL_INFO_CREATE_NOTIFY     ProtoCode = 212
	ProtoCode_ARMY_PANEL_INFO_UPDATE_NOTIFY     ProtoCode = 213
	ProtoCode_ARMY_PANEL_INFO_DELETE_NOTIFY     ProtoCode = 214
	ProtoCode_MAGIC_WEAPON_CREATE_REQUEST       ProtoCode = 500
	ProtoCode_MAGIC_WEAPON_CREATE_RESPONSE      ProtoCode = 501
	ProtoCode_MAGIC_WEAPON_LEVEL_UP_REQUEST     ProtoCode = 502
	ProtoCode_MAGIC_WEAPON_LEVEL_UP_RESPONSE    ProtoCode = 503
	// MAGIC_WEAPON_STAGE_UP_REQUEST = 504;
	// MAGIC_WEAPON_STAGE_UP_RESPONSE = 505;
	ProtoCode_MAGIC_WEAPON_STAR_UP_REQUEST         ProtoCode = 506
	ProtoCode_MAGIC_WEAPON_STAR_UP_RESPONSE        ProtoCode = 507
	ProtoCode_MAGIC_WEAPON_SKILL_LEVEL_UP_REQUEST  ProtoCode = 508
	ProtoCode_MAGIC_WEAPON_SKILL_LEVEL_UP_RESPONSE ProtoCode = 509
	//ITEMS
	ProtoCode_ITEMS_ADD_REQUEST    ProtoCode = 1000
	ProtoCode_ITEMS_CHANGED_NOTIFY ProtoCode = 1001
	ProtoCode_ITEMS_USE_REQUEST    ProtoCode = 1002
	ProtoCode_ITEMS_LIST_RESPONSE  ProtoCode = 1003
	ProtoCode_ITEMS_USE_RESPONSE   ProtoCode = 1004
	//navigate
	ProtoCode_NAV_REQUEST            ProtoCode = 2000
	ProtoCode_NAV_NOTIFY             ProtoCode = 2001
	ProtoCode_POSITION_UPDATE_NOTIFY ProtoCode = 2002
	ProtoCode_MAP_UNIT_CHANGE_NOTIFY ProtoCode = 2003
	//aoi
	ProtoCode_AOI_REQUEST             ProtoCode = 2054
	ProtoCode_AOI_NOTIFY              ProtoCode = 2055
	ProtoCode_SEARCH_MONSTER_REQUEST  ProtoCode = 2060
	ProtoCode_SEARCH_MONSTER_RESPONSE ProtoCode = 2061
	//battle
	ProtoCode_BATTLE_REPORT_NOTIFY   ProtoCode = 2100
	ProtoCode_BATTLE_TEST_REQUEST    ProtoCode = 2101
	ProtoCode_BATTLE_REPORT_REQUEST  ProtoCode = 2105
	ProtoCode_BATTLE_REPORT_RESPONSE ProtoCode = 2106
	ProtoCode_BATTLE_CARD_REQUEST    ProtoCode = 2107
	ProtoCode_BATTLE_CARD_RESPONSE   ProtoCode = 2108
	ProtoCode_BATTLE_START_NOTIFY    ProtoCode = 2110
	ProtoCode_BATTLE_END_NOTIFY      ProtoCode = 2111
	ProtoCode_BATTLE_CMD_NOTIFY      ProtoCode = 2112
	// 城池相关
	ProtoCode_MOVE_CITY_REQUEST           ProtoCode = 2200
	ProtoCode_MOVE_CITY_RESPONSE          ProtoCode = 2201
	ProtoCode_ADD_WORLD_POSITION_REQUEST  ProtoCode = 2202
	ProtoCode_ADD_WORLD_POSITION_RESPONSE ProtoCode = 2203
	ProtoCode_MOVE_CITY_NOTIFY            ProtoCode = 2204
	// 联盟
	ProtoCode_UNION_CREATE_REQUEST            ProtoCode = 3001 // 联盟创建请求
	ProtoCode_UNION_CREATE_RESPONSE           ProtoCode = 3002 // 联盟创建回复
	ProtoCode_UNION_GET_DETAIL_REQUEST        ProtoCode = 3003 // 获取联盟信息请求
	ProtoCode_UNION_GET_DETAIL_RESPONSE       ProtoCode = 3004 // 获取联盟信息回复
	ProtoCode_UNION_JOIN_REQUEST              ProtoCode = 3005 // 加入联盟请求
	ProtoCode_UNION_JOIN_RESPONSE             ProtoCode = 3006 // 加入联盟回复
	ProtoCode_UNION_JOIN_NOTIFY               ProtoCode = 3007 // 加入联盟审批通知
	ProtoCode_UNION_QUIT_REQUEST              ProtoCode = 3008 // 退出联盟请求
	ProtoCode_UNION_QUIT_RESPONSE             ProtoCode = 3009 // 退出联盟回复
	ProtoCode_UNION_DISBAND_REQUEST           ProtoCode = 3010 // 解散联盟请求
	ProtoCode_UNION_DISBAND_RESPONSE          ProtoCode = 3011 // 解散联盟回复
	ProtoCode_UNION_JOIN_APPLY_LIST_REQUEST   ProtoCode = 3012 // 联盟加入申请列表请求
	ProtoCode_UNION_JOIN_APPLY_LIST_RESPONSE  ProtoCode = 3013 // 联盟加入申请列表回复
	ProtoCode_UNION_JOIN_APPLY_CHECK_REQUEST  ProtoCode = 3014 // 联盟加入申请审批请求
	ProtoCode_UNION_JOIN_APPLY_CHECK_RESPONSE ProtoCode = 3015 // 联盟加入申请审批回复
	ProtoCode_UNION_GET_LIST_REQUEST          ProtoCode = 3016 // 获取可加入的联盟列表请求
	ProtoCode_UNION_GET_LIST_RESPONSE         ProtoCode = 3017 // 获取可加入的联盟列表回复
	ProtoCode_UNION_BUILD_START_REQUEST       ProtoCode = 3018 // 联盟建造请求
	ProtoCode_UNION_BUILD_START_RESPONSE      ProtoCode = 3019 // 联盟建造回复
	ProtoCode_UNION_BUILD_START_NOTIFY        ProtoCode = 3020 // 联盟建造通知
	ProtoCode_UNION_BUILD_DONE_NOTIFY         ProtoCode = 3021 // 联盟建造完成通知
	ProtoCode_UNION_TERRITORY_REQUEST         ProtoCode = 3022 // 登录获取全地图联盟领土信息请求
	ProtoCode_UNION_TERRITORY_RESPONSE        ProtoCode = 3023 // 登录获取全地图联盟领土信息回复
	ProtoCode_PASS_CHANGE_UNION_NOTIFY        ProtoCode = 3024 // 关隘变更联盟归属通知
	//email
	ProtoCode_EMAIL_LIST_REQUEST       ProtoCode = 4000
	ProtoCode_EMAIL_LIST_RESPONSE      ProtoCode = 4001
	ProtoCode_EMAIL_CLAIM_REQUEST      ProtoCode = 4002
	ProtoCode_EMAIL_CLAIM_RESPONSE     ProtoCode = 4003
	ProtoCode_EMAIL_DELETE_REQUEST     ProtoCode = 4004
	ProtoCode_EMAIL_DELETE_RESPONSE    ProtoCode = 4005
	ProtoCode_EMAIL_NEW_ADDED_RESPONSE ProtoCode = 4006
	//role update
	ProtoCode_ROLE_DETAIL_NOTIFY ProtoCode = 5000
)

// Enum value maps for ProtoCode.
var (
	ProtoCode_name = map[int32]string{
		0:    "INVALID",
		1:    "ERROR_MESSAGE",
		2:    "HEART_BEAT_REQUEST",
		3:    "HEART_BEAT_RESPONSE",
		10:   "LOGIN_REQUEST",
		11:   "LOGIN_RESPONSE",
		12:   "LOGOUT_REQUEST",
		13:   "LOGOUT_RESPONSE",
		14:   "KICK_OUT_REQUEST",
		15:   "KICK_OUT_RESPONSE",
		20:   "LOGIN_INIT_REQUEST",
		21:   "INIT_ROLE_RESPONSE",
		22:   "INIT_BUILDINGS_RESPONSE",
		23:   "INIT_HEROS_RESPONSE",
		24:   "INIT_WORLD_POSITION_RESPONSE",
		60:   "LOGIN_INIT_FINISH_RESPONSE",
		61:   "ROLE_INIT_CREATE_REQUEST",
		62:   "ADD_BUILDING_RESPONSE",
		63:   "ADD_HERO_RESPONSE",
		80:   "ROLE_INIT_CREATE_RESPONSE",
		81:   "BUILDING_CREATE_REQUEST",
		82:   "BUILDING_CREATE_RESPONSE",
		83:   "BUILDING_LEVEL_UP_REQUEST",
		84:   "BUILDING_LEVEL_UP_RESPONSE",
		85:   "BUILDING_LEVEL_UP_FINISH_REQUEST",
		86:   "BUILDING_LEVEL_UP_FINISH_RESPONSE",
		87:   "START_MAKE_SOLDIER_REQUEST",
		88:   "START_MAKE_SOLDIER_RESPONSE",
		89:   "COLLECT_RESOURCE_REQUEST",
		90:   "COLLECT_RESOURCE_RESPONSE",
		91:   "COLLECT_SOLDIER_REQUEST",
		92:   "COLLECT_SOLDIER_RESPONSE",
		93:   "BUILDING_UPDATE_NOTIFY",
		94:   "INCITY_SOLDIER_UPDATE_NOTIFY",
		95:   "START_LV_UP_SOLDIER_REQUEST",
		96:   "START_LV_UP_SOLDIER_RESPONSE",
		120:  "HERO_CREATE_REQUEST",
		121:  "HERO_CREATE_RESPONSE",
		122:  "HERO_LEVEL_UP_REQUEST",
		123:  "HERO_LEVEL_UP_RESPONSE",
		124:  "HERO_STAGE_UP_REQUEST",
		125:  "HERO_STAGE_UP_RESPONSE",
		126:  "HERO_STAR_UP_REQUEST",
		127:  "HERO_STAR_UP_RESPONSE",
		128:  "HERO_SKILL_LEVEL_UP_REQUEST",
		129:  "HERO_SKILL_LEVEL_UP_RESPONSE",
		130:  "HERO_INFO_REQUEST",
		131:  "HERO_INFO_RESPONSE",
		132:  "HERO_SINGLE_INFO_REQUEST",
		133:  "HERO_SINGLE_INFO_RESPONSE",
		200:  "ARMY_CREATE_REQUEST",
		201:  "ARMY_DELETE_NOTIFY",
		202:  "ARMY_CREATE_NOTIFY",
		203:  "ARMY_ACTION_REQUEST",
		204:  "ARMY_ACTION_RESPONSE",
		205:  "ARMY_ACTION_NOTIFY",
		206:  "BATTLE_UNIT_STATUS_CHANGE_NOTIFY",
		208:  "MONSTER_CREATE_NOTIFY",
		209:  "MONSTER_DELETE_NOTIFY",
		210:  "RESOURCE_FIELD_CREATE_NOTIFY",
		211:  "RESOURCE_FIELD_DELETE_NOTIFY",
		212:  "ARMY_PANEL_INFO_CREATE_NOTIFY",
		213:  "ARMY_PANEL_INFO_UPDATE_NOTIFY",
		214:  "ARMY_PANEL_INFO_DELETE_NOTIFY",
		500:  "MAGIC_WEAPON_CREATE_REQUEST",
		501:  "MAGIC_WEAPON_CREATE_RESPONSE",
		502:  "MAGIC_WEAPON_LEVEL_UP_REQUEST",
		503:  "MAGIC_WEAPON_LEVEL_UP_RESPONSE",
		506:  "MAGIC_WEAPON_STAR_UP_REQUEST",
		507:  "MAGIC_WEAPON_STAR_UP_RESPONSE",
		508:  "MAGIC_WEAPON_SKILL_LEVEL_UP_REQUEST",
		509:  "MAGIC_WEAPON_SKILL_LEVEL_UP_RESPONSE",
		1000: "ITEMS_ADD_REQUEST",
		1001: "ITEMS_CHANGED_NOTIFY",
		1002: "ITEMS_USE_REQUEST",
		1003: "ITEMS_LIST_RESPONSE",
		1004: "ITEMS_USE_RESPONSE",
		2000: "NAV_REQUEST",
		2001: "NAV_NOTIFY",
		2002: "POSITION_UPDATE_NOTIFY",
		2003: "MAP_UNIT_CHANGE_NOTIFY",
		2054: "AOI_REQUEST",
		2055: "AOI_NOTIFY",
		2060: "SEARCH_MONSTER_REQUEST",
		2061: "SEARCH_MONSTER_RESPONSE",
		2100: "BATTLE_REPORT_NOTIFY",
		2101: "BATTLE_TEST_REQUEST",
		2105: "BATTLE_REPORT_REQUEST",
		2106: "BATTLE_REPORT_RESPONSE",
		2107: "BATTLE_CARD_REQUEST",
		2108: "BATTLE_CARD_RESPONSE",
		2110: "BATTLE_START_NOTIFY",
		2111: "BATTLE_END_NOTIFY",
		2112: "BATTLE_CMD_NOTIFY",
		2200: "MOVE_CITY_REQUEST",
		2201: "MOVE_CITY_RESPONSE",
		2202: "ADD_WORLD_POSITION_REQUEST",
		2203: "ADD_WORLD_POSITION_RESPONSE",
		2204: "MOVE_CITY_NOTIFY",
		3001: "UNION_CREATE_REQUEST",
		3002: "UNION_CREATE_RESPONSE",
		3003: "UNION_GET_DETAIL_REQUEST",
		3004: "UNION_GET_DETAIL_RESPONSE",
		3005: "UNION_JOIN_REQUEST",
		3006: "UNION_JOIN_RESPONSE",
		3007: "UNION_JOIN_NOTIFY",
		3008: "UNION_QUIT_REQUEST",
		3009: "UNION_QUIT_RESPONSE",
		3010: "UNION_DISBAND_REQUEST",
		3011: "UNION_DISBAND_RESPONSE",
		3012: "UNION_JOIN_APPLY_LIST_REQUEST",
		3013: "UNION_JOIN_APPLY_LIST_RESPONSE",
		3014: "UNION_JOIN_APPLY_CHECK_REQUEST",
		3015: "UNION_JOIN_APPLY_CHECK_RESPONSE",
		3016: "UNION_GET_LIST_REQUEST",
		3017: "UNION_GET_LIST_RESPONSE",
		3018: "UNION_BUILD_START_REQUEST",
		3019: "UNION_BUILD_START_RESPONSE",
		3020: "UNION_BUILD_START_NOTIFY",
		3021: "UNION_BUILD_DONE_NOTIFY",
		3022: "UNION_TERRITORY_REQUEST",
		3023: "UNION_TERRITORY_RESPONSE",
		3024: "PASS_CHANGE_UNION_NOTIFY",
		4000: "EMAIL_LIST_REQUEST",
		4001: "EMAIL_LIST_RESPONSE",
		4002: "EMAIL_CLAIM_REQUEST",
		4003: "EMAIL_CLAIM_RESPONSE",
		4004: "EMAIL_DELETE_REQUEST",
		4005: "EMAIL_DELETE_RESPONSE",
		4006: "EMAIL_NEW_ADDED_RESPONSE",
		5000: "ROLE_DETAIL_NOTIFY",
	}
	ProtoCode_value = map[string]int32{
		"INVALID":                              0,
		"ERROR_MESSAGE":                        1,
		"HEART_BEAT_REQUEST":                   2,
		"HEART_BEAT_RESPONSE":                  3,
		"LOGIN_REQUEST":                        10,
		"LOGIN_RESPONSE":                       11,
		"LOGOUT_REQUEST":                       12,
		"LOGOUT_RESPONSE":                      13,
		"KICK_OUT_REQUEST":                     14,
		"KICK_OUT_RESPONSE":                    15,
		"LOGIN_INIT_REQUEST":                   20,
		"INIT_ROLE_RESPONSE":                   21,
		"INIT_BUILDINGS_RESPONSE":              22,
		"INIT_HEROS_RESPONSE":                  23,
		"INIT_WORLD_POSITION_RESPONSE":         24,
		"LOGIN_INIT_FINISH_RESPONSE":           60,
		"ROLE_INIT_CREATE_REQUEST":             61,
		"ADD_BUILDING_RESPONSE":                62,
		"ADD_HERO_RESPONSE":                    63,
		"ROLE_INIT_CREATE_RESPONSE":            80,
		"BUILDING_CREATE_REQUEST":              81,
		"BUILDING_CREATE_RESPONSE":             82,
		"BUILDING_LEVEL_UP_REQUEST":            83,
		"BUILDING_LEVEL_UP_RESPONSE":           84,
		"BUILDING_LEVEL_UP_FINISH_REQUEST":     85,
		"BUILDING_LEVEL_UP_FINISH_RESPONSE":    86,
		"START_MAKE_SOLDIER_REQUEST":           87,
		"START_MAKE_SOLDIER_RESPONSE":          88,
		"COLLECT_RESOURCE_REQUEST":             89,
		"COLLECT_RESOURCE_RESPONSE":            90,
		"COLLECT_SOLDIER_REQUEST":              91,
		"COLLECT_SOLDIER_RESPONSE":             92,
		"BUILDING_UPDATE_NOTIFY":               93,
		"INCITY_SOLDIER_UPDATE_NOTIFY":         94,
		"START_LV_UP_SOLDIER_REQUEST":          95,
		"START_LV_UP_SOLDIER_RESPONSE":         96,
		"HERO_CREATE_REQUEST":                  120,
		"HERO_CREATE_RESPONSE":                 121,
		"HERO_LEVEL_UP_REQUEST":                122,
		"HERO_LEVEL_UP_RESPONSE":               123,
		"HERO_STAGE_UP_REQUEST":                124,
		"HERO_STAGE_UP_RESPONSE":               125,
		"HERO_STAR_UP_REQUEST":                 126,
		"HERO_STAR_UP_RESPONSE":                127,
		"HERO_SKILL_LEVEL_UP_REQUEST":          128,
		"HERO_SKILL_LEVEL_UP_RESPONSE":         129,
		"HERO_INFO_REQUEST":                    130,
		"HERO_INFO_RESPONSE":                   131,
		"HERO_SINGLE_INFO_REQUEST":             132,
		"HERO_SINGLE_INFO_RESPONSE":            133,
		"ARMY_CREATE_REQUEST":                  200,
		"ARMY_DELETE_NOTIFY":                   201,
		"ARMY_CREATE_NOTIFY":                   202,
		"ARMY_ACTION_REQUEST":                  203,
		"ARMY_ACTION_RESPONSE":                 204,
		"ARMY_ACTION_NOTIFY":                   205,
		"BATTLE_UNIT_STATUS_CHANGE_NOTIFY":     206,
		"MONSTER_CREATE_NOTIFY":                208,
		"MONSTER_DELETE_NOTIFY":                209,
		"RESOURCE_FIELD_CREATE_NOTIFY":         210,
		"RESOURCE_FIELD_DELETE_NOTIFY":         211,
		"ARMY_PANEL_INFO_CREATE_NOTIFY":        212,
		"ARMY_PANEL_INFO_UPDATE_NOTIFY":        213,
		"ARMY_PANEL_INFO_DELETE_NOTIFY":        214,
		"MAGIC_WEAPON_CREATE_REQUEST":          500,
		"MAGIC_WEAPON_CREATE_RESPONSE":         501,
		"MAGIC_WEAPON_LEVEL_UP_REQUEST":        502,
		"MAGIC_WEAPON_LEVEL_UP_RESPONSE":       503,
		"MAGIC_WEAPON_STAR_UP_REQUEST":         506,
		"MAGIC_WEAPON_STAR_UP_RESPONSE":        507,
		"MAGIC_WEAPON_SKILL_LEVEL_UP_REQUEST":  508,
		"MAGIC_WEAPON_SKILL_LEVEL_UP_RESPONSE": 509,
		"ITEMS_ADD_REQUEST":                    1000,
		"ITEMS_CHANGED_NOTIFY":                 1001,
		"ITEMS_USE_REQUEST":                    1002,
		"ITEMS_LIST_RESPONSE":                  1003,
		"ITEMS_USE_RESPONSE":                   1004,
		"NAV_REQUEST":                          2000,
		"NAV_NOTIFY":                           2001,
		"POSITION_UPDATE_NOTIFY":               2002,
		"MAP_UNIT_CHANGE_NOTIFY":               2003,
		"AOI_REQUEST":                          2054,
		"AOI_NOTIFY":                           2055,
		"SEARCH_MONSTER_REQUEST":               2060,
		"SEARCH_MONSTER_RESPONSE":              2061,
		"BATTLE_REPORT_NOTIFY":                 2100,
		"BATTLE_TEST_REQUEST":                  2101,
		"BATTLE_REPORT_REQUEST":                2105,
		"BATTLE_REPORT_RESPONSE":               2106,
		"BATTLE_CARD_REQUEST":                  2107,
		"BATTLE_CARD_RESPONSE":                 2108,
		"BATTLE_START_NOTIFY":                  2110,
		"BATTLE_END_NOTIFY":                    2111,
		"BATTLE_CMD_NOTIFY":                    2112,
		"MOVE_CITY_REQUEST":                    2200,
		"MOVE_CITY_RESPONSE":                   2201,
		"ADD_WORLD_POSITION_REQUEST":           2202,
		"ADD_WORLD_POSITION_RESPONSE":          2203,
		"MOVE_CITY_NOTIFY":                     2204,
		"UNION_CREATE_REQUEST":                 3001,
		"UNION_CREATE_RESPONSE":                3002,
		"UNION_GET_DETAIL_REQUEST":             3003,
		"UNION_GET_DETAIL_RESPONSE":            3004,
		"UNION_JOIN_REQUEST":                   3005,
		"UNION_JOIN_RESPONSE":                  3006,
		"UNION_JOIN_NOTIFY":                    3007,
		"UNION_QUIT_REQUEST":                   3008,
		"UNION_QUIT_RESPONSE":                  3009,
		"UNION_DISBAND_REQUEST":                3010,
		"UNION_DISBAND_RESPONSE":               3011,
		"UNION_JOIN_APPLY_LIST_REQUEST":        3012,
		"UNION_JOIN_APPLY_LIST_RESPONSE":       3013,
		"UNION_JOIN_APPLY_CHECK_REQUEST":       3014,
		"UNION_JOIN_APPLY_CHECK_RESPONSE":      3015,
		"UNION_GET_LIST_REQUEST":               3016,
		"UNION_GET_LIST_RESPONSE":              3017,
		"UNION_BUILD_START_REQUEST":            3018,
		"UNION_BUILD_START_RESPONSE":           3019,
		"UNION_BUILD_START_NOTIFY":             3020,
		"UNION_BUILD_DONE_NOTIFY":              3021,
		"UNION_TERRITORY_REQUEST":              3022,
		"UNION_TERRITORY_RESPONSE":             3023,
		"PASS_CHANGE_UNION_NOTIFY":             3024,
		"EMAIL_LIST_REQUEST":                   4000,
		"EMAIL_LIST_RESPONSE":                  4001,
		"EMAIL_CLAIM_REQUEST":                  4002,
		"EMAIL_CLAIM_RESPONSE":                 4003,
		"EMAIL_DELETE_REQUEST":                 4004,
		"EMAIL_DELETE_RESPONSE":                4005,
		"EMAIL_NEW_ADDED_RESPONSE":             4006,
		"ROLE_DETAIL_NOTIFY":                   5000,
	}
)

func (x ProtoCode) Enum() *ProtoCode {
	p := new(ProtoCode)
	*p = x
	return p
}

func (x ProtoCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtoCode) Descriptor() protoreflect.EnumDescriptor {
	return file_ProtoCommon_proto_enumTypes[1].Descriptor()
}

func (ProtoCode) Type() protoreflect.EnumType {
	return &file_ProtoCommon_proto_enumTypes[1]
}

func (x ProtoCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtoCode.Descriptor instead.
func (ProtoCode) EnumDescriptor() ([]byte, []int) {
	return file_ProtoCommon_proto_rawDescGZIP(), []int{1}
}

type ErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtoError int32 `protobuf:"varint,1,opt,name=protoError,proto3" json:"protoError,omitempty"` // 错误码
	ProtoCode  int32 `protobuf:"varint,2,opt,name=protoCode,proto3" json:"protoCode,omitempty"`   // 网络协议
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ProtoCommon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ProtoCommon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_ProtoCommon_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorMessage) GetProtoError() int32 {
	if x != nil {
		return x.ProtoError
	}
	return 0
}

func (x *ErrorMessage) GetProtoCode() int32 {
	if x != nil {
		return x.ProtoCode
	}
	return 0
}

type HeartBeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientTime int64 `protobuf:"varint,1,opt,name=clientTime,proto3" json:"clientTime,omitempty"` // 客户端时间
}

func (x *HeartBeatRequest) Reset() {
	*x = HeartBeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ProtoCommon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatRequest) ProtoMessage() {}

func (x *HeartBeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ProtoCommon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatRequest.ProtoReflect.Descriptor instead.
func (*HeartBeatRequest) Descriptor() ([]byte, []int) {
	return file_ProtoCommon_proto_rawDescGZIP(), []int{1}
}

func (x *HeartBeatRequest) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

type HeartBeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientTime int64 `protobuf:"varint,1,opt,name=clientTime,proto3" json:"clientTime,omitempty"` // 客户端时间
	ServerTime int64 `protobuf:"varint,2,opt,name=serverTime,proto3" json:"serverTime,omitempty"` // 服务器时间
}

func (x *HeartBeatResponse) Reset() {
	*x = HeartBeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ProtoCommon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatResponse) ProtoMessage() {}

func (x *HeartBeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ProtoCommon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatResponse.ProtoReflect.Descriptor instead.
func (*HeartBeatResponse) Descriptor() ([]byte, []int) {
	return file_ProtoCommon_proto_rawDescGZIP(), []int{2}
}

func (x *HeartBeatResponse) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

func (x *HeartBeatResponse) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

var File_ProtoCommon_proto protoreflect.FileDescriptor

var file_ProtoCommon_proto_rawDesc = []byte{
	0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4c, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x32, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x2a, 0xb1, 0x0d, 0x0a, 0x0a, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4c, 0x4f,
	0x47, 0x49, 0x4e, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x49, 0x43, 0x4b,
	0x45, 0x54, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x42,
	0x55, 0x53, 0x59, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x4f, 0x4c,
	0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x06, 0x12,
	0x16, 0x0a, 0x12, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x4f, 0x4c, 0x45, 0x5f,
	0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x08, 0x12, 0x10,
	0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x09,
	0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x4c, 0x45, 0x4e, 0x47,
	0x54, 0x48, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15,
	0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x5f, 0x4c, 0x45, 0x4e, 0x47, 0x54, 0x48, 0x5f, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x0c, 0x12, 0x15, 0x0a, 0x10, 0x48, 0x45, 0x52, 0x4f, 0x5f,
	0x43, 0x52, 0x41, 0x45, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0xe9, 0x07, 0x12, 0x0f,
	0x0a, 0x0a, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xea, 0x07, 0x12,
	0x13, 0x0a, 0x0e, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x10, 0xeb, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x46, 0x55, 0x4c,
	0x4c, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x10, 0xec, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x48, 0x45,
	0x52, 0x4f, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x10, 0xed, 0x07,
	0x12, 0x13, 0x0a, 0x0e, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x53, 0x54,
	0x41, 0x52, 0x10, 0xee, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e,
	0x47, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0xd1, 0x0f,
	0x12, 0x18, 0x0a, 0x13, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x56, 0x5f,
	0x55, 0x50, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0xd2, 0x0f, 0x12, 0x1f, 0x0a, 0x1a, 0x42, 0x55,
	0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x56, 0x5f, 0x55, 0x50, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x4c, 0x56, 0x10, 0xd3, 0x0f, 0x12, 0x2c, 0x0a, 0x27, 0x42,
	0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x56, 0x5f, 0x55, 0x50, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x10, 0xd4, 0x0f, 0x12, 0x24, 0x0a, 0x1f, 0x42, 0x55, 0x49,
	0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x56, 0x5f, 0x55, 0x50, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xd5, 0x0f, 0x12,
	0x22, 0x0a, 0x1d, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x56, 0x5f, 0x55,
	0x50, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x46, 0x55, 0x4c, 0x4c,
	0x10, 0xd6, 0x0f, 0x12, 0x32, 0x0a, 0x2d, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f,
	0x4c, 0x56, 0x5f, 0x55, 0x50, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x5f, 0x43, 0x41, 0x4e, 0x4e, 0x4f,
	0x54, 0x5f, 0x4c, 0x56, 0x5f, 0x55, 0x50, 0x5f, 0x57, 0x48, 0x45, 0x4e, 0x5f, 0x57, 0x4f, 0x52,
	0x4b, 0x49, 0x4e, 0x47, 0x10, 0xd7, 0x0f, 0x12, 0x25, 0x0a, 0x20, 0x42, 0x55, 0x49, 0x4c, 0x44,
	0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x56, 0x5f, 0x55, 0x50, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xd8, 0x0f, 0x12, 0x28,
	0x0a, 0x23, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x56, 0x5f, 0x55, 0x50,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x5f, 0x50, 0x4f, 0x53, 0x5f, 0x49, 0x53, 0x5f, 0x4f, 0x43, 0x43,
	0x55, 0x50, 0x49, 0x45, 0x44, 0x10, 0xd9, 0x0f, 0x12, 0x17, 0x0a, 0x12, 0x42, 0x55, 0x49, 0x4c,
	0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xda,
	0x0f, 0x12, 0x24, 0x0a, 0x1f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x57, 0x4f,
	0x52, 0x4b, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0xdb, 0x0f, 0x12, 0x2e, 0x0a, 0x29, 0x42, 0x55, 0x49, 0x4c, 0x44,
	0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x56, 0x5f, 0x55, 0x50, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x5f, 0x42,
	0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x53, 0x5f, 0x55, 0x50, 0x47, 0x52, 0x41,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0xdc, 0x0f, 0x12, 0x27, 0x0a, 0x22, 0x42, 0x55, 0x49, 0x4c, 0x44,
	0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x56, 0x5f, 0x55, 0x50, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x59, 0x45, 0x54, 0x10, 0xdd, 0x0f,
	0x12, 0x2d, 0x0a, 0x28, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x49, 0x4e,
	0x49, 0x53, 0x48, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x59, 0x45, 0x54, 0x10, 0xde, 0x0f, 0x12,
	0x2a, 0x0a, 0x25, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x49, 0x4e, 0x49,
	0x53, 0x48, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xdf, 0x0f, 0x12, 0x32, 0x0a, 0x2d, 0x42,
	0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x57,
	0x4f, 0x52, 0x4b, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e,
	0x47, 0x5f, 0x49, 0x53, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0xe0, 0x0f, 0x12,
	0x23, 0x0a, 0x1e, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x10, 0xe1, 0x0f, 0x12, 0x2b, 0x0a, 0x26, 0x4d, 0x41, 0x4b, 0x45, 0x5f, 0x53, 0x4f, 0x4c,
	0x44, 0x49, 0x45, 0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x4f, 0x4c,
	0x44, 0x49, 0x45, 0x52, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x53, 0x10, 0xe2,
	0x0f, 0x12, 0x3c, 0x0a, 0x37, 0x4d, 0x41, 0x4b, 0x45, 0x5f, 0x53, 0x4f, 0x4c, 0x44, 0x49, 0x45,
	0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f,
	0x43, 0x41, 0x4e, 0x4e, 0x4f, 0x54, 0x5f, 0x4d, 0x41, 0x4b, 0x45, 0x5f, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x43, 0x5f, 0x53, 0x4f, 0x4c, 0x44, 0x49, 0x45, 0x52, 0x10, 0xe3, 0x0f, 0x12,
	0x36, 0x0a, 0x31, 0x4d, 0x41, 0x4b, 0x45, 0x5f, 0x53, 0x4f, 0x4c, 0x44, 0x49, 0x45, 0x52, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x5f, 0x43, 0x41, 0x4e, 0x4e, 0x4f, 0x54, 0x5f, 0x4d, 0x41, 0x4b, 0x45,
	0x5f, 0x41, 0x4d, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x53, 0x4f, 0x4c, 0x44,
	0x49, 0x45, 0x52, 0x53, 0x10, 0xe4, 0x0f, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x4b, 0x49, 0x4c, 0x4c,
	0x5f, 0x53, 0x4c, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xb9, 0x17,
	0x12, 0x15, 0x0a, 0x10, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x4c,
	0x45, 0x56, 0x45, 0x4c, 0x10, 0xba, 0x17, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x41, 0x47, 0x49, 0x43,
	0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x43, 0x52, 0x41, 0x45, 0x54, 0x45, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x10, 0xa1, 0x1f, 0x12, 0x17, 0x0a, 0x12, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x5f,
	0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xa2, 0x1f, 0x12,
	0x1b, 0x0a, 0x16, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xa3, 0x1f, 0x12, 0x1c, 0x0a, 0x17,
	0x4d, 0x41, 0x47, 0x49, 0x43, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x46, 0x55, 0x4c,
	0x4c, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x10, 0xa4, 0x1f, 0x12, 0x1b, 0x0a, 0x16, 0x4d, 0x41,
	0x47, 0x49, 0x43, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x5f,
	0x53, 0x54, 0x41, 0x52, 0x10, 0xa5, 0x1f, 0x12, 0x14, 0x0a, 0x0f, 0x49, 0x54, 0x45, 0x4d, 0x53,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x88, 0x27, 0x12, 0x13, 0x0a,
	0x0e, 0x41, 0x52, 0x4d, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10,
	0xf0, 0x2e, 0x12, 0x11, 0x0a, 0x0c, 0x41, 0x52, 0x4d, 0x59, 0x5f, 0x49, 0x53, 0x5f, 0x4c, 0x4f,
	0x53, 0x45, 0x10, 0xf1, 0x2e, 0x12, 0x13, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xf2, 0x2e, 0x12, 0x16, 0x0a, 0x11, 0x55, 0x4e,
	0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10,
	0xd9, 0x36, 0x12, 0x16, 0x0a, 0x11, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x10, 0xda, 0x36, 0x12, 0x11, 0x0a, 0x0c, 0x55, 0x4e,
	0x49, 0x4f, 0x4e, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x45, 0x44, 0x10, 0xdb, 0x36, 0x12, 0x14, 0x0a,
	0x0f, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0xdc, 0x36, 0x12, 0x1d, 0x0a, 0x18, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x41,
	0x44, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x4e, 0x4e, 0x4f, 0x54, 0x5f, 0x51, 0x55, 0x49, 0x54, 0x10,
	0xdd, 0x36, 0x12, 0x1b, 0x0a, 0x16, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x41, 0x44,
	0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xde, 0x36, 0x12,
	0x14, 0x0a, 0x0f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49,
	0x53, 0x54, 0x10, 0xc0, 0x3e, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x48,
	0x41, 0x56, 0x41, 0x5f, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x45, 0x44, 0x10, 0xc1, 0x3e, 0x2a, 0xaf,
	0x1d, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x48, 0x45, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x45, 0x41, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x48, 0x45, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x45,
	0x41, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x03, 0x12, 0x11, 0x0a,
	0x0d, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x0a,
	0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x53, 0x45, 0x10, 0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x4f, 0x47, 0x4f, 0x55, 0x54, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x4f, 0x47, 0x4f,
	0x55, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x0d, 0x12, 0x14, 0x0a,
	0x10, 0x4b, 0x49, 0x43, 0x4b, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0x0e, 0x12, 0x15, 0x0a, 0x11, 0x4b, 0x49, 0x43, 0x4b, 0x5f, 0x4f, 0x55, 0x54, 0x5f,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x0f, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x4f,
	0x47, 0x49, 0x4e, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0x14, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x15, 0x12, 0x1b, 0x0a, 0x17, 0x49, 0x4e,
	0x49, 0x54, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x53, 0x5f, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x16, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e, 0x49, 0x54, 0x5f,
	0x48, 0x45, 0x52, 0x4f, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x17,
	0x12, 0x20, 0x0a, 0x1c, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x50,
	0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45,
	0x10, 0x18, 0x12, 0x1e, 0x0a, 0x1a, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x49, 0x4e, 0x49, 0x54,
	0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45,
	0x10, 0x3c, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x3d,
	0x12, 0x19, 0x0a, 0x15, 0x41, 0x44, 0x44, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x3e, 0x12, 0x15, 0x0a, 0x11, 0x41,
	0x44, 0x44, 0x5f, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45,
	0x10, 0x3f, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10,
	0x50, 0x12, 0x1b, 0x0a, 0x17, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x51, 0x12, 0x1c,
	0x0a, 0x18, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x52, 0x12, 0x1d, 0x0a, 0x19,
	0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55,
	0x50, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x53, 0x12, 0x1e, 0x0a, 0x1a, 0x42,
	0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x54, 0x12, 0x24, 0x0a, 0x20, 0x42,
	0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50,
	0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0x55, 0x12, 0x25, 0x0a, 0x21, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x56, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x5f, 0x4d, 0x41, 0x4b, 0x45, 0x5f, 0x53, 0x4f, 0x4c, 0x44, 0x49, 0x45, 0x52, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x57, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x5f, 0x4d, 0x41, 0x4b, 0x45, 0x5f, 0x53, 0x4f, 0x4c, 0x44, 0x49, 0x45, 0x52, 0x5f, 0x52,
	0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x58, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x4c,
	0x4c, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x59, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4c, 0x4c, 0x45,
	0x43, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0x5a, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43,
	0x54, 0x5f, 0x53, 0x4f, 0x4c, 0x44, 0x49, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0x5b, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x53,
	0x4f, 0x4c, 0x44, 0x49, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10,
	0x5c, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x5d, 0x12, 0x20, 0x0a,
	0x1c, 0x49, 0x4e, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x4f, 0x4c, 0x44, 0x49, 0x45, 0x52, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x5e, 0x12,
	0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4c, 0x56, 0x5f, 0x55, 0x50, 0x5f, 0x53,
	0x4f, 0x4c, 0x44, 0x49, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x5f,
	0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4c, 0x56, 0x5f, 0x55, 0x50, 0x5f,
	0x53, 0x4f, 0x4c, 0x44, 0x49, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45,
	0x10, 0x60, 0x12, 0x17, 0x0a, 0x13, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x78, 0x12, 0x18, 0x0a, 0x14, 0x48,
	0x45, 0x52, 0x4f, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x10, 0x79, 0x12, 0x19, 0x0a, 0x15, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x7a,
	0x12, 0x1a, 0x0a, 0x16, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55,
	0x50, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x7b, 0x12, 0x19, 0x0a, 0x15,
	0x48, 0x45, 0x52, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x50, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x7c, 0x12, 0x1a, 0x0a, 0x16, 0x48, 0x45, 0x52, 0x4f, 0x5f,
	0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x10, 0x7d, 0x12, 0x18, 0x0a, 0x14, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x52,
	0x5f, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x7e, 0x12, 0x19, 0x0a,
	0x15, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x55, 0x50, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x7f, 0x12, 0x20, 0x0a, 0x1b, 0x48, 0x45, 0x52, 0x4f,
	0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x80, 0x01, 0x12, 0x21, 0x0a, 0x1c, 0x48, 0x45,
	0x52, 0x4f, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55,
	0x50, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x81, 0x01, 0x12, 0x16, 0x0a,
	0x11, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x10, 0x82, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x83, 0x01, 0x12, 0x1d,
	0x0a, 0x18, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x84, 0x01, 0x12, 0x1e, 0x0a,
	0x19, 0x48, 0x45, 0x52, 0x4f, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x46,
	0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x85, 0x01, 0x12, 0x18, 0x0a,
	0x13, 0x41, 0x52, 0x4d, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x10, 0xc8, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x41, 0x52, 0x4d, 0x59, 0x5f,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xc9, 0x01,
	0x12, 0x17, 0x0a, 0x12, 0x41, 0x52, 0x4d, 0x59, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xca, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x41, 0x52, 0x4d,
	0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0xcb, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x41, 0x52, 0x4d, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xcc, 0x01, 0x12, 0x17,
	0x0a, 0x12, 0x41, 0x52, 0x4d, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f,
	0x54, 0x49, 0x46, 0x59, 0x10, 0xcd, 0x01, 0x12, 0x25, 0x0a, 0x20, 0x42, 0x41, 0x54, 0x54, 0x4c,
	0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xce, 0x01, 0x12, 0x1a,
	0x0a, 0x15, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xd0, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x4d, 0x4f,
	0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x49, 0x46, 0x59, 0x10, 0xd1, 0x01, 0x12, 0x21, 0x0a, 0x1c, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xd2, 0x01, 0x12, 0x21, 0x0a, 0x1c, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xd3, 0x01, 0x12, 0x22, 0x0a, 0x1d,
	0x41, 0x52, 0x4d, 0x59, 0x5f, 0x50, 0x41, 0x4e, 0x45, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xd4, 0x01,
	0x12, 0x22, 0x0a, 0x1d, 0x41, 0x52, 0x4d, 0x59, 0x5f, 0x50, 0x41, 0x4e, 0x45, 0x4c, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x59, 0x10, 0xd5, 0x01, 0x12, 0x22, 0x0a, 0x1d, 0x41, 0x52, 0x4d, 0x59, 0x5f, 0x50, 0x41, 0x4e,
	0x45, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xd6, 0x01, 0x12, 0x20, 0x0a, 0x1b, 0x4d, 0x41, 0x47, 0x49,
	0x43, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xf4, 0x03, 0x12, 0x21, 0x0a, 0x1c, 0x4d, 0x41,
	0x47, 0x49, 0x43, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xf5, 0x03, 0x12, 0x22, 0x0a,
	0x1d, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xf6,
	0x03, 0x12, 0x23, 0x0a, 0x1e, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f,
	0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f,
	0x4e, 0x53, 0x45, 0x10, 0xf7, 0x03, 0x12, 0x21, 0x0a, 0x1c, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x5f,
	0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x55, 0x50, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xfa, 0x03, 0x12, 0x22, 0x0a, 0x1d, 0x4d, 0x41, 0x47,
	0x49, 0x43, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x5f, 0x55,
	0x50, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xfb, 0x03, 0x12, 0x28, 0x0a,
	0x23, 0x4d, 0x41, 0x47, 0x49, 0x43, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x53, 0x4b,
	0x49, 0x4c, 0x4c, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x10, 0xfc, 0x03, 0x12, 0x29, 0x0a, 0x24, 0x4d, 0x41, 0x47, 0x49, 0x43,
	0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x5f, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x5f, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10,
	0xfd, 0x03, 0x12, 0x16, 0x0a, 0x11, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x5f, 0x41, 0x44, 0x44, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xe8, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x49, 0x54,
	0x45, 0x4d, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x49,
	0x46, 0x59, 0x10, 0xe9, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x5f, 0x55,
	0x53, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xea, 0x07, 0x12, 0x18, 0x0a,
	0x13, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0xeb, 0x07, 0x12, 0x17, 0x0a, 0x12, 0x49, 0x54, 0x45, 0x4d, 0x53,
	0x5f, 0x55, 0x53, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xec, 0x07,
	0x12, 0x10, 0x0a, 0x0b, 0x4e, 0x41, 0x56, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0xd0, 0x0f, 0x12, 0x0f, 0x0a, 0x0a, 0x4e, 0x41, 0x56, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59,
	0x10, 0xd1, 0x0f, 0x12, 0x1b, 0x0a, 0x16, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xd2, 0x0f,
	0x12, 0x1b, 0x0a, 0x16, 0x4d, 0x41, 0x50, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xd3, 0x0f, 0x12, 0x10, 0x0a,
	0x0b, 0x41, 0x4f, 0x49, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x86, 0x10, 0x12,
	0x0f, 0x0a, 0x0a, 0x41, 0x4f, 0x49, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x87, 0x10,
	0x12, 0x1b, 0x0a, 0x16, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x4d, 0x4f, 0x4e, 0x53, 0x54,
	0x45, 0x52, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x8c, 0x10, 0x12, 0x1c, 0x0a,
	0x17, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f,
	0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x8d, 0x10, 0x12, 0x19, 0x0a, 0x14, 0x42,
	0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4e, 0x4f, 0x54,
	0x49, 0x46, 0x59, 0x10, 0xb4, 0x10, 0x12, 0x18, 0x0a, 0x13, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45,
	0x5f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xb5, 0x10,
	0x12, 0x1a, 0x0a, 0x15, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52,
	0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xb9, 0x10, 0x12, 0x1b, 0x0a, 0x16,
	0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xba, 0x10, 0x12, 0x18, 0x0a, 0x13, 0x42, 0x41, 0x54,
	0x54, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0xbb, 0x10, 0x12, 0x19, 0x0a, 0x14, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x43, 0x41,
	0x52, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xbc, 0x10, 0x12, 0x18,
	0x0a, 0x13, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xbe, 0x10, 0x12, 0x16, 0x0a, 0x11, 0x42, 0x41, 0x54, 0x54,
	0x4c, 0x45, 0x5f, 0x45, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xbf, 0x10,
	0x12, 0x16, 0x0a, 0x11, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x43, 0x4d, 0x44, 0x5f, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xc0, 0x10, 0x12, 0x16, 0x0a, 0x11, 0x4d, 0x4f, 0x56, 0x45,
	0x5f, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x98, 0x11,
	0x12, 0x17, 0x0a, 0x12, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x99, 0x11, 0x12, 0x1f, 0x0a, 0x1a, 0x41, 0x44, 0x44,
	0x5f, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x9a, 0x11, 0x12, 0x20, 0x0a, 0x1b, 0x41, 0x44,
	0x44, 0x5f, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x9b, 0x11, 0x12, 0x15, 0x0a, 0x10,
	0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x43, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59,
	0x10, 0x9c, 0x11, 0x12, 0x19, 0x0a, 0x14, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xb9, 0x17, 0x12, 0x1a,
	0x0a, 0x15, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x52,
	0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xba, 0x17, 0x12, 0x1d, 0x0a, 0x18, 0x55, 0x4e,
	0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xbb, 0x17, 0x12, 0x1e, 0x0a, 0x19, 0x55, 0x4e, 0x49,
	0x4f, 0x4e, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xbc, 0x17, 0x12, 0x17, 0x0a, 0x12, 0x55, 0x4e, 0x49,
	0x4f, 0x4e, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0xbd, 0x17, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x4a, 0x4f, 0x49, 0x4e,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xbe, 0x17, 0x12, 0x16, 0x0a, 0x11,
	0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x59, 0x10, 0xbf, 0x17, 0x12, 0x17, 0x0a, 0x12, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x55,
	0x49, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xc0, 0x17, 0x12, 0x18, 0x0a,
	0x13, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0xc1, 0x17, 0x12, 0x1a, 0x0a, 0x15, 0x55, 0x4e, 0x49, 0x4f, 0x4e,
	0x5f, 0x44, 0x49, 0x53, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0xc2, 0x17, 0x12, 0x1b, 0x0a, 0x16, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x53,
	0x42, 0x41, 0x4e, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xc3, 0x17,
	0x12, 0x22, 0x0a, 0x1d, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x41,
	0x50, 0x50, 0x4c, 0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0xc4, 0x17, 0x12, 0x23, 0x0a, 0x1e, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x4a, 0x4f,
	0x49, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xc5, 0x17, 0x12, 0x23, 0x0a, 0x1e, 0x55, 0x4e, 0x49,
	0x4f, 0x4e, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x43, 0x48,
	0x45, 0x43, 0x4b, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xc6, 0x17, 0x12, 0x24,
	0x0a, 0x1f, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x41, 0x50, 0x50,
	0x4c, 0x59, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x10, 0xc7, 0x17, 0x12, 0x1b, 0x0a, 0x16, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x45,
	0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xc8,
	0x17, 0x12, 0x1c, 0x0a, 0x17, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x4c,
	0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xc9, 0x17, 0x12,
	0x1e, 0x0a, 0x19, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xca, 0x17, 0x12,
	0x1f, 0x0a, 0x1a, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xcb, 0x17,
	0x12, 0x1d, 0x0a, 0x18, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xcc, 0x17, 0x12,
	0x1c, 0x0a, 0x17, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x44,
	0x4f, 0x4e, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xcd, 0x17, 0x12, 0x1c, 0x0a,
	0x17, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x49, 0x54, 0x4f, 0x52, 0x59,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xce, 0x17, 0x12, 0x1d, 0x0a, 0x18, 0x55,
	0x4e, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x45, 0x52, 0x52, 0x49, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x52,
	0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xcf, 0x17, 0x12, 0x1d, 0x0a, 0x18, 0x50, 0x41,
	0x53, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x5f,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0xd0, 0x17, 0x12, 0x17, 0x0a, 0x12, 0x45, 0x4d, 0x41,
	0x49, 0x4c, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0xa0, 0x1f, 0x12, 0x18, 0x0a, 0x13, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x4c, 0x49, 0x53, 0x54,
	0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xa1, 0x1f, 0x12, 0x18, 0x0a, 0x13,
	0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x10, 0xa2, 0x1f, 0x12, 0x19, 0x0a, 0x14, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f,
	0x43, 0x4c, 0x41, 0x49, 0x4d, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xa3,
	0x1f, 0x12, 0x19, 0x0a, 0x14, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xa4, 0x1f, 0x12, 0x1a, 0x0a, 0x15,
	0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xa5, 0x1f, 0x12, 0x1d, 0x0a, 0x18, 0x45, 0x4d, 0x41, 0x49,
	0x4c, 0x5f, 0x4e, 0x45, 0x57, 0x5f, 0x41, 0x44, 0x44, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0xa6, 0x1f, 0x12, 0x17, 0x0a, 0x12, 0x52, 0x4f, 0x4c, 0x45, 0x5f,
	0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x88, 0x27,
	0x42, 0x18, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5a, 0x06, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_ProtoCommon_proto_rawDescOnce sync.Once
	file_ProtoCommon_proto_rawDescData = file_ProtoCommon_proto_rawDesc
)

func file_ProtoCommon_proto_rawDescGZIP() []byte {
	file_ProtoCommon_proto_rawDescOnce.Do(func() {
		file_ProtoCommon_proto_rawDescData = protoimpl.X.CompressGZIP(file_ProtoCommon_proto_rawDescData)
	})
	return file_ProtoCommon_proto_rawDescData
}

var file_ProtoCommon_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ProtoCommon_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ProtoCommon_proto_goTypes = []interface{}{
	(ProtoError)(0),           // 0: ProtoError
	(ProtoCode)(0),            // 1: ProtoCode
	(*ErrorMessage)(nil),      // 2: ErrorMessage
	(*HeartBeatRequest)(nil),  // 3: HeartBeatRequest
	(*HeartBeatResponse)(nil), // 4: HeartBeatResponse
}
var file_ProtoCommon_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ProtoCommon_proto_init() }
func file_ProtoCommon_proto_init() {
	if File_ProtoCommon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ProtoCommon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ProtoCommon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ProtoCommon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ProtoCommon_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ProtoCommon_proto_goTypes,
		DependencyIndexes: file_ProtoCommon_proto_depIdxs,
		EnumInfos:         file_ProtoCommon_proto_enumTypes,
		MessageInfos:      file_ProtoCommon_proto_msgTypes,
	}.Build()
	File_ProtoCommon_proto = out.File
	file_ProtoCommon_proto_rawDesc = nil
	file_ProtoCommon_proto_goTypes = nil
	file_ProtoCommon_proto_depIdxs = nil
}
